services:
  # üêò Banco de dados PostgreSQL
  postgres-db:
    image: postgres:15
    container_name: postgres-db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${DB_USER} -d $${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 12

  # üê¶ Zookeeper (para Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_PORT}
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "${ZOOKEEPER_PORT}:${ZOOKEEPER_PORT}"
    healthcheck:
      test: ["CMD-SHELL", "timeout 5 bash -c 'echo ruok | nc localhost $${ZOOKEEPER_PORT} | grep imok'"]
      interval: 10s
      retries: 20
      start_period: 20s
      timeout: 5s

  # ü•® Kafka broker
  kafka-broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka-broker
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:${ZOOKEEPER_PORT}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker:${KAFKA_BROKER_PORT}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    ports:
      - "${KAFKA_BROKER_PORT}:${KAFKA_BROKER_PORT}"
    healthcheck:
      test: ["CMD-SHELL", "kafka-broker-api-versions --bootstrap-server localhost:$${KAFKA_BROKER_PORT}"]
      interval: 10s
      timeout: 10s
      retries: 10

  # üè¶ Conta Service (Spring Boot)
  conta-service:
    build:
      context: ../conta-service   # caminho ajustado para a pasta do Dockerfile
      dockerfile: Dockerfile
    image: conta-service:latest
    container_name: conta-service
    depends_on:
      postgres-db:
        condition: service_healthy
      kafka-broker:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-db:${DB_PORT}/${DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      KAFKA_BOOTSTRAP_SERVERS: kafka-broker:${KAFKA_BROKER_PORT}
    ports:
      - "${CONTA_SERVICE_PORT}:${CONTA_SERVICE_PORT}"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:$${CONTA_SERVICE_PORT}/actuator/health || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 12

volumes:
  postgres_data:

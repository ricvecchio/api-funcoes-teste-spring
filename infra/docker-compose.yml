version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres-db
    environment:
      POSTGRES_DB: conta_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    networks:
      - microservices-net

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - microservices-net

  kafka-broker:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka-broker
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      - microservices-net
    depends_on:
      - zookeeper

  conta-service:
    image: conta-service:latest
    build:
      context: ..
      dockerfile: conta-service/Dockerfile
    container_name: conta-service
    ports:
      - "8081:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/conta_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka-broker:9092
      # Configurações para evitar timeout
      SPRING_KAFKA_PROPERTIES_REQUEST_TIMEOUT_MS: 30000
      SPRING_KAFKA_PROPERTIES_SESSION_TIMEOUT_MS: 30000
    networks:
      - microservices-net
    depends_on:
      - postgres
      - kafka-broker

  kafka-service:
    image: kafka-service:latest
    build:
      context: ..
      dockerfile: kafka-service/Dockerfile
    container_name: kafka-service
    ports:
      - "8082:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/conta_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka-broker:9092
      SPRING_KAFKA_CONSUMER_GROUP_ID: kafka-service-group
      # Configurações para evitar timeout
      SPRING_KAFKA_CONSUMER_PROPERTIES_REQUEST_TIMEOUT_MS: 45000
      SPRING_KAFKA_CONSUMER_PROPERTIES_SESSION_TIMEOUT_MS: 30000
      SPRING_KAFKA_PROPERTIES_MAX_POLL_INTERVAL_MS: 300000
    networks:
      - microservices-net
    depends_on:
      - postgres
      - kafka-broker

networks:
  microservices-net:
    driver: bridge
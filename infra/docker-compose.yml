# docker-compose.yml - compat√≠vel com Docker Compose v2
services:

  postgres-db:
    image: postgres:15
    container_name: postgres-db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - microservices-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_PORT}
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "${ZOOKEEPER_PORT}:${ZOOKEEPER_PORT}"
    networks:
      - microservices-net
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "${ZOOKEEPER_PORT}"]
      interval: 10s
      timeout: 5s
      retries: 10

  kafka-broker:
    image: confluentinc/cp-kafka:7.6.1
    container_name: kafka-broker
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:${ZOOKEEPER_PORT}"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:${KAFKA_BROKER_PORT}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "${KAFKA_BROKER_PORT}:${KAFKA_BROKER_PORT}"
    networks:
      - microservices-net
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:${KAFKA_BROKER_PORT}"]
      interval: 10s
      timeout: 5s
      retries: 10

  conta-service:
    build:
      context: ${CONTA_SERVICE_PATH}
      dockerfile: Dockerfile
    container_name: conta-service
    environment:
      SPRING_DATASOURCE_URL: ${DB_URL}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASS}
    ports:
      - "${CONTA_SERVICE_PORT}:8081"
    depends_on:
      - postgres-db
    networks:
      - microservices-net
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  kafka-service:
    build:
      context: ${KAFKA_SERVICE_PATH}
      dockerfile: Dockerfile
    container_name: kafka-service
    environment:
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
    ports:
      - "${KAFKA_SERVICE_PORT}:8082"
    depends_on:
      - kafka-broker
    networks:
      - microservices-net
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres-data:

networks:
  microservices-net:
    driver: bridge
services:
  # =========================
  # PostgreSQL
  # =========================
  postgres-db:
    image: postgres:15
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network

  # =========================
  # Zookeeper
  # =========================
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - app-network

  # =========================
  # Kafka Broker
  # =========================
  kafka-broker:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka-broker
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - app-network

  # =========================
  # Conta Service
  # =========================
  conta-service:
    build:
      context: ../conta-service
      dockerfile: ../conta-service/Dockerfile
    container_name: conta-service
    restart: always
    ports:
      - "8081:8081"
    env_file: .env
    depends_on:
      - postgres-db
      - kafka-broker
    networks:
      - app-network

  # =========================
  # Kafka Service
  # =========================
  kafka-service:
    build:
      context: ../kafka-service
      dockerfile: ../kafka-service/Dockerfile
    container_name: kafka-service
    restart: always
    ports:
      - "8082:8082"
    env_file: .env
    depends_on:
      - postgres-db
      - kafka-broker
    networks:
      - app-network

  # =========================
  # Script para inicializar o tópico
  # =========================
  kafka-init:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka-init
    depends_on:
      - kafka-broker
    entrypoint: ["/bin/bash", "-c"]
    command:
      - |
        echo "⏳ Aguardando Kafka iniciar..."
        sleep 10
        echo "✅ Criando tópico: ${KAFKA_TOPIC_CONTAS_ABRIR}"
        kafka-topics --create --if-not-exists \
          --bootstrap-server kafka-broker:9092 \
          --replication-factor 1 \
          --partitions 1 \
          --topic ${KAFKA_TOPIC_CONTAS_ABRIR} || echo "Tópico já existe"
    networks:
      - app-network

# =========================
# Rede & Volumes
# =========================
networks:
  app-network:
    driver: bridge

volumes:
  pgdata:
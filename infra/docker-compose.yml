# ======================================
# üß± INFRAESTRUTURA DO PROJETO
# ======================================
# Gerencia todos os servi√ßos:
# - conta-service (backend principal)
# - kafka-service (microservi√ßo)
# - postgres-db
# ======================================

services:
  # ======================================
  # üì¶ CONTA SERVICE - API principal Spring Boot
  # ======================================
  conta-service:
    container_name: conta-service
    build:
      context: ../conta-service   # Caminho relativo correto
      dockerfile: Dockerfile
    image: conta-service:${SPRING_PROFILES_ACTIVE:-latest}
    ports:
      - "${CONTA_SERVICE_PORT:-8081}:${CONTA_SERVICE_PORT:-8081}"
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-dev}
      JAVA_OPTS: "-Xms256m -Xmx512m"
      DB_URL: ${DB_URL}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    depends_on:
      - kafka-service
      - postgres
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - backend

  # ======================================
  # ‚öôÔ∏è KAFKA SERVICE - microservi√ßo de mensageria
  # ======================================
  kafka-service:
    container_name: kafka-service
    build:
      context: ../kafka-service   # Caminho relativo correto
      dockerfile: Dockerfile
    image: kafka-service:${SPRING_PROFILES_ACTIVE:-latest}
    ports:
      - "${KAFKA_SERVICE_PORT:-8082}:${KAFKA_SERVICE_PORT:-8082}"
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-dev}
      JAVA_OPTS: "-Xms256m -Xmx512m"
      DB_URL: ${DB_URL}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    depends_on:
      - postgres
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - backend

  # ======================================
  # üêò POSTGRES DATABASE
  # ======================================
  postgres:
    image: postgres:16
    container_name: postgres-db
    ports:
      - "${DB_PORT:-5432}:${DB_PORT:-5432}"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - backend

# ======================================
# üóÑÔ∏è VOLUMES
# ======================================
volumes:
  pgdata:

# ======================================
# üåê NETWORKS
# ======================================
networks:
  backend:
    driver: bridge
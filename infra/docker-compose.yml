# docker-compose.yml
# üöÄ Ambiente completo do projeto API Fun√ß√µes Teste Spring
# üîπ Todos os servi√ßos com coment√°rios objetivos em PT-BR
# üîπ Volumes persistentes e rede customizada
# üîπ Healthchecks confi√°veis
# üîπ Paths compat√≠veis com CI/CD (workflow rodando na pasta infra)

networks:
  api-network:
    driver: bridge

volumes:
  postgres-data:
  zookeeper-data:
  kafka-data:

services:
  # üêò Banco de dados PostgreSQL
  postgres-db:
    image: postgres:15
    container_name: postgres-db
    restart: unless-stopped
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - api-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      retries: 20
      start_period: 5s

  # üêª Zookeeper (coordena Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    restart: unless-stopped
    ports:
      - "${ZOOKEEPER_PORT}:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - api-network
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
    healthcheck:
      test: ["CMD-SHELL", "echo ruok | nc localhost 2181 | grep imok"]
      interval: 5s
      retries: 20
      start_period: 5s

  # ü¶Ñ Kafka Broker
  kafka-broker:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka-broker
    restart: unless-stopped
    ports:
      - "${KAFKA_BROKER_PORT}:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      zookeeper:
        condition: service_healthy
    networks:
      - api-network
    volumes:
      - kafka-data:/var/lib/kafka/data
    healthcheck:
      test: ["CMD-SHELL", "kafka-broker-api-versions --bootstrap-server localhost:9092 || exit 1"]
      interval: 5s
      retries: 20
      start_period: 5s

  # üíª Microservice Conta
  conta-service:
    build:
      context: ${CONTA_SERVICE_PATH}
      dockerfile: Dockerfile
    container_name: conta-service
    restart: unless-stopped
    ports:
      - "${CONTA_SERVICE_PORT}:8081"
    environment:
      DB_URL: ${DB_URL}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
    depends_on:
      postgres-db:
        condition: service_healthy
      kafka-broker:
        condition: service_healthy
    networks:
      - api-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8081/actuator/health || exit 1"]
      interval: 5s
      retries: 20
      start_period: 10s

  # üíå Microservice Kafka
  kafka-service:
    build:
      context: ${KAFKA_SERVICE_PATH}
      dockerfile: Dockerfile
    container_name: kafka-service
    restart: unless-stopped
    ports:
      - "${KAFKA_SERVICE_PORT}:8082"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
    depends_on:
      kafka-broker:
        condition: service_healthy
    networks:
      - api-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8082/actuator/health || exit 1"]
      interval: 5s
      retries: 20
      start_period: 10s

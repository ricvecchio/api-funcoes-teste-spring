services:
  # Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "127.0.0.1", "2181", "|", "grep", "imok"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - microservices-net

  # Kafka Broker
  kafka-broker:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka-broker
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - microservices-net

  # PostgreSQL Database
  postgres-db:
    image: postgres:15
    container_name: postgres-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - microservices-net

  # Conta Service
  conta-service:
    build:
      context: ./conta-service
      dockerfile: Dockerfile
    container_name: conta-service
    depends_on:
      - postgres-db
      - kafka-broker
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-db:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      KAFKA_BOOTSTRAP_SERVERS: kafka-broker:9092
    ports:
      - "8081:8081"
    networks:
      - microservices-net

  # Kafka Service
  kafka-service:
    build:
      context: ./kafka-service
      dockerfile: Dockerfile
    container_name: kafka-service
    depends_on:
      kafka-broker:
        condition: service_healthy
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka-broker:9092
    ports:
      - "8082:8082"
    networks:
      - microservices-net

networks:
  microservices-net:
    driver: bridge
version: '3.9'

networks:
  microservices-net:
    driver: bridge

services:
  postgres-db:
    image: postgres:15
    container_name: postgres-db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - microservices-net
    restart: unless-stopped

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "-w", "5", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - microservices-net
    restart: unless-stopped

  kafka-broker:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka-broker
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "kafka-broker:9092"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - microservices-net
    restart: unless-stopped

  conta-service:
    build:
      context: ./conta-service
      dockerfile: Dockerfile
    container_name: conta-service
    depends_on:
      kafka-broker:
        condition: service_healthy
      postgres-db:
        condition: service_healthy
    ports:
      - "8081:8080"
    networks:
      - microservices-net
    restart: unless-stopped

  kafka-service:
    build:
      context: ./kafka-service
      dockerfile: Dockerfile
    container_name: kafka-service
    depends_on:
      kafka-broker:
        condition: service_healthy
    ports:
      - "8082:8080"
    networks:
      - microservices-net
    restart: unless-stopped

# infra/docker-compose.yml
services:
  # ===========================
  # PostgreSQL
  # ===========================
  postgres-db:
    image: postgres:15
    container_name: postgres-db
    ports:
      - "${DB_PORT:-5432}:5432"
    environment:
      POSTGRES_DB: ${DB_NAME:-conta_db}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 5s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data

  # ===========================
  # Zookeeper
  # ===========================
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    container_name: zookeeper
    ports:
      - "${ZOOKEEPER_PORT:-2181}:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_PORT:-2181}
      JVMFLAGS: "-Djava.security.egd=file:/dev/./urandom -Djdk.management.cgroup.enabled=false"
    healthcheck:
      test: ["CMD", "echo ruok | nc localhost ${ZOOKEEPER_PORT:-2181} | grep imok"]
      interval: 5s
      retries: 5

  # ===========================
  # Kafka
  # ===========================
  kafka-broker:
    image: confluentinc/cp-kafka:7.2.1
    container_name: kafka-broker
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "${KAFKA_BROKER_PORT:-9092}:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:${ZOOKEEPER_PORT:-2181}
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker:${KAFKA_BROKER_PORT:-9092}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD-SHELL", "kafka-broker-api-versions --bootstrap-server kafka-broker:${KAFKA_BROKER_PORT:-9092}"]
      interval: 10s
      retries: 5

  # ===========================
  # Conta Service
  # ===========================
  conta-service:
    build:
      context: ../conta-service
      dockerfile: Dockerfile
      cache_from:
        - type=registry,ref=conta-service:latest
      target: production
    container_name: conta-service
    ports:
      - "${CONTA_SERVICE_PORT:-8081}:8081"
    environment:
      DB_URL: ${DB_URL}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
    depends_on:
      - postgres-db
      - kafka-broker

  # ===========================
  # Kafka Service
  # ===========================
  kafka-service:
    build:
      context: ../kafka-service
      dockerfile: Dockerfile
      cache_from:
        - type=registry,ref=kafka-service:latest
      target: production
    container_name: kafka-service
    ports:
      - "${KAFKA_SERVICE_PORT:-8082}:8082"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
    depends_on:
      - kafka-broker

# ===========================
# Volumes
# ===========================
volumes:
  postgres-data:
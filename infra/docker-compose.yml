version: "3.8"

services:
  # ======================================
  # Banco de Dados PostgreSQL
  # ======================================
  postgres-db:
    image: postgres:15
    container_name: postgres-db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ======================================
  # Zookeeper para Kafka
  # ======================================
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_PORT}
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "${ZOOKEEPER_PORT}:${ZOOKEEPER_PORT}"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "${ZOOKEEPER_PORT}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ======================================
  # Kafka Broker
  # ======================================
  kafka-broker:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-broker
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:${ZOOKEEPER_PORT}
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:${KAFKA_BROKER_PORT}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "${KAFKA_BROKER_PORT}:${KAFKA_BROKER_PORT}"
    networks:
      - app-network
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:${KAFKA_BROKER_PORT}", "--list"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ======================================
  # Conta Service
  # ======================================
  conta-service:
    build:
      context: ../conta-service
      dockerfile: Dockerfile
    container_name: conta-service
    ports:
      - "${CONTA_SERVICE_PORT}:8080"
    environment:
      SPRING_DATASOURCE_URL: ${DB_URL}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
      SERVER_PORT: 8080
    depends_on:
      - postgres-db
      - kafka-broker
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 10

  # ======================================
  # Kafka Service
  # ======================================
  kafka-service:
    build:
      context: ../kafka-service
      dockerfile: Dockerfile
    container_name: kafka-service
    ports:
      - "${KAFKA_SERVICE_PORT}:8080"
    environment:
      SPRING_DATASOURCE_URL: ${DB_URL}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
      SERVER_PORT: 8080
    depends_on:
      - postgres-db
      - kafka-broker
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 10

# ======================================
# Redes
# ======================================
networks:
  app-network:
    driver: bridge

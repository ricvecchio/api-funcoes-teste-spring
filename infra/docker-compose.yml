services:
  postgres-db:
    image: postgres:15
    container_name: postgres-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - microservices-net

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD", "echo ruok | nc 127.0.0.1 2181 | grep imok"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - microservices-net

  kafka-broker:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-broker
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions --bootstrap-server localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - microservices-net

  conta-service:
    build:
      context: ./conta-service
      dockerfile: Dockerfile
    container_name: conta-service
    ports:
      - "8081:8081"
    depends_on:
      - postgres-db
      - kafka-broker
    networks:
      - microservices-net

  kafka-service:
    build:
      context: ./kafka-service
      dockerfile: Dockerfile
    container_name: kafka-service
    ports:
      - "8082:8082"
    depends_on:
      - kafka-broker
      - postgres-db
    networks:
      - microservices-net

networks:
  microservices-net:
    driver: bridge
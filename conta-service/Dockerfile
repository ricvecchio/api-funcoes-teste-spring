# ======================================
# Imagem base: Java 21 JRE (Eclipse Temurin)
# ======================================
FROM eclipse-temurin:21-jre-jammy

# ======================================
# Diret√≥rio de trabalho dentro do container
# ======================================
WORKDIR /app

# ======================================
# Instala√ß√£o de curl para healthchecks e netcat para depend√™ncias
# ======================================
RUN apt-get update && apt-get install -y curl netcat-openbsd \
    && rm -rf /var/lib/apt/lists/*

# ======================================
# Copiar o JAR constru√≠do pelo Maven para dentro do container
# ======================================
COPY target/*.jar app.jar

# ======================================
# Expor porta do container
# NOTA: Porta interna do container √© 8080
# O mapeamento externo √© feito via docker-compose usando a vari√°vel ${CONTA_SERVICE_PORT}
# ======================================
EXPOSE 8080

# ======================================
# Healthcheck para GitHub Actions / Docker
# ======================================
HEALTHCHECK --interval=20s --timeout=10s --start-period=60s --retries=5 \
  CMD curl -f http://localhost:8080/actuator/health || exit 1

# ======================================
# Comando de entrada: espera depend√™ncias e inicia a aplica√ß√£o
# ======================================
ENTRYPOINT ["sh", "-c", "\
  echo 'üïí Esperando Kafka e Postgres...' && \
  for i in {1..30}; do \
    nc -z kafka-broker ${KAFKA_BROKER_PORT} && nc -z postgres-db ${DB_PORT} && break; \
    echo '‚è≥ Aguardando depend√™ncias... ($i/30)'; sleep 3; \
  done && \
  echo '‚úÖ Depend√™ncias dispon√≠veis! Iniciando Conta Service...' && \
  java -jar /app/app.jar \
"]

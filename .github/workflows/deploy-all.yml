name: CI/CD Microserviços

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ github.repository_owner }}

jobs:
  # Job de Build e Testes
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [conta-service, kafka-service]

    steps:
      - name: "[1] Checkout do código"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "[2] Configurar JDK 21"
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: "[3] Build Projeto Raiz"
        run: |
          echo "🏗️  Building projeto raiz..."
          mvn clean install -DskipTests

      - name: "[4] Build ${{ matrix.service }}"
        run: |
          echo "🔧 Building ${{ matrix.service }}..."
          cd ${{ matrix.service }}
          mvn clean compile -DskipTests

      - name: "[5] Testes ${{ matrix.service }}"
        run: |
          echo "🧪 Executando testes ${{ matrix.service }}..."
          cd ${{ matrix.service }}
          mvn test

      - name: "[6] Package ${{ matrix.service }}"
        run: |
          echo "📦 Packaging ${{ matrix.service }}..."
          cd ${{ matrix.service }}
          mvn package -DskipTests

  # Job de Integração com Docker
  docker-integration:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: "[1] Checkout do código"
        uses: actions/checkout@v4

      - name: "[2] Setup Docker Buildx"
        uses: docker/setup-buildx-action@v3

      - name: "[3] Build Projeto Raiz para Docker"
        run: |
          echo "🏗️  Building projeto raiz para Docker..."
          mvn clean install -DskipTests

      - name: "[4] Build e Testar com Docker Compose"
        run: |
          echo "🐳 Executando Docker Compose..."
          cd infra
          
          # Build das imagens
          docker compose build --no-cache --progress=plain
          
          # Subir serviços
          docker compose up -d
          
          echo "⏳ Aguardando inicialização dos serviços..."
          sleep 60
          
          # Verificar status
          echo "📊 Status dos containers:"
          docker compose ps
          
          # Health checks
          echo "🏥 Verificando saúde dos serviços..."
          docker compose logs --tail=50
          
          # Testar serviços
          echo "🧪 Testando conectividade..."
          curl -f http://localhost:8081/actuator/health || (echo "❌ Conta Service falhou" && exit 1)
          curl -f http://localhost:8082/actuator/health || (echo "❌ Kafka Service falhou" && exit 1)
          
          echo "✅ Todos os serviços estão respondendo!"

      - name: "[5] Parar serviços"
        if: always()
        run: |
          cd infra
          docker compose down
          echo "🧹 Serviços parados"

  # Job de Security Scan (Opcional)
  security-scan:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: "[1] Checkout do código"
        uses: actions/checkout@v4

      - name: "[2] Dependency Check"
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'api-funcoes-teste-spring'
          path: '.'
          format: 'HTML'
          args: >
            --failOnCVSS 7
            --scan conta-service/
            --scan kafka-service/
            --enableRetired

      - name: "[3] Upload Report"
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: reports/
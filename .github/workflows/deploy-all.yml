name: Deploy All Services (CI)

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      CONTA_SERVICE_PATH: ./conta-service
      KAFKA_SERVICE_PATH: ./kafka-service
      INFRA_PATH: ./infra
      DOCKER_BUILDKIT: 1
      COMPOSE_DOCKER_CLI_BUILD: 1

    steps:
      # ======================================
      # 1Ô∏è‚É£ Checkout do reposit√≥rio
      # ======================================
      - name: Checkout do c√≥digo
        uses: actions/checkout@v4

      # ======================================
      # 2Ô∏è‚É£ Configurar Java para builds dos servi√ßos Spring Boot
      # ======================================
      - name: Configurar Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven

      # ======================================
      # 3Ô∏è‚É£ Build do conta-service (Spring Boot)
      # ======================================
      - name: Build do conta-service
        working-directory: ${{ env.CONTA_SERVICE_PATH }}
        run: |
          echo "üèóÔ∏è  Buildando conta-service..."
          ./mvnw clean package -DskipTests
          echo "‚úÖ Build conclu√≠do para conta-service"

      # ======================================
      # 4Ô∏è‚É£ Build do kafka-service (Spring Boot)
      # ======================================
      - name: Build do kafka-service
        working-directory: ${{ env.KAFKA_SERVICE_PATH }}
        run: |
          echo "üèóÔ∏è  Buildando kafka-service..."
          ./mvnw clean package -DskipTests
          echo "‚úÖ Build conclu√≠do para kafka-service"

      # ======================================
      # 5Ô∏è‚É£ Configurar Docker e Docker Compose
      # ======================================
      - name: Configurar Docker Compose
        run: |
          docker version
          docker compose version

      # ======================================
      # 6Ô∏è‚É£ Subir os containers com vari√°veis de ambiente do .env
      # ======================================
      - name: Subir containers (infra + servi√ßos)
        working-directory: ${{ env.INFRA_PATH }}
        run: |
          echo "üöÄ Subindo containers definidos em docker-compose.yml"
          docker compose --env-file .env up -d --build
          echo "‚úÖ Containers iniciados"
          docker ps -a

      # ======================================
      # 7Ô∏è‚É£ Aguardar servi√ßos estarem prontos
      # ======================================
      - name: Aguardar PostgreSQL e Zookeeper ficarem 'healthy'
        run: |
          echo "‚è≥ Aguardando PostgreSQL e Zookeeper ficarem prontos..."
          for i in {1..30}; do
            STATUS_DB=$(docker inspect --format='{{.State.Health.Status}}' postgres-db 2>/dev/null || echo "none")
            STATUS_ZK=$(docker inspect --format='{{.State.Health.Status}}' zookeeper 2>/dev/null || echo "none")
            echo "Tentativa $i ‚Üí postgres-db=$STATUS_DB, zookeeper=$STATUS_ZK"
            if [[ "$STATUS_DB" == "healthy" && "$STATUS_ZK" == "healthy" ]]; then
              echo "‚úÖ Ambos os servi√ßos est√£o saud√°veis!"
              break
            fi
            sleep 5
          done

      # ======================================
      # 8Ô∏è‚É£ Exibir logs detalhados dos servi√ßos
      # ======================================
      - name: Exibir logs detalhados
        run: |
          echo "üîç Logs detalhados dos servi√ßos:"
          docker ps -a
          echo "=== conta-service logs ==="
          docker logs conta-service || echo "‚ö†Ô∏è conta-service n√£o encontrado"
          echo "=== kafka-service logs ==="
          docker logs kafka-service || echo "‚ö†Ô∏è kafka-service n√£o encontrado"
          echo "=== postgres-db logs ==="
          docker logs postgres-db || echo "‚ö†Ô∏è postgres-db n√£o encontrado"
          echo "=== kafka-broker logs ==="
          docker logs kafka-broker || echo "‚ö†Ô∏è kafka-broker n√£o encontrado"
          echo "=== zookeeper logs ==="
          docker logs zookeeper || echo "‚ö†Ô∏è zookeeper n√£o encontrado"

      # ======================================
      # 9Ô∏è‚É£ Encerrar containers ap√≥s o CI
      # ======================================
      - name: Encerrar containers
        if: always()
        working-directory: ${{ env.INFRA_PATH }}
        run: |
          echo "üßπ Encerrando containers..."
          docker compose down -v
          echo "‚úÖ Limpeza conclu√≠da."
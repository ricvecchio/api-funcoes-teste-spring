name: CI/CD Microserviços

on:
  push:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [conta-service, kafka-service]

    steps:
      - name: "[1] Checkout do código"
        uses: actions/checkout@v4

      - name: "[2] Configurar JDK 21"
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: "[3] Build Projeto Raiz"
        run: |
          echo "🏗️  Building projeto raiz..."
          mvn clean install -DskipTests -q

      - name: "[4] Build e Testes ${{ matrix.service }}"
        run: |
          echo "🔧 Building ${{ matrix.service }}..."
          cd ${{ matrix.service }}
          mvn clean compile test -q

  docker-integration:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: "[1] Checkout do código"
        uses: actions/checkout@v4

      - name: "[2] Configurar Docker Buildx"
        uses: docker/setup-buildx-action@v3

      - name: "[3] Build das Imagens Docker"
        run: |
          echo "🐳 Build das imagens Docker..."
          docker build -t conta-service:latest -f conta-service/Dockerfile .
          docker build -t kafka-service:latest -f kafka-service/Dockerfile .

      - name: "[4] Iniciar Infraestrutura Básica"
        run: |
          echo "🚀 Iniciando PostgreSQL e Kafka..."
          cd infra
          
          # Iniciar apenas infraestrutura básica
          docker compose up -d postgres zookeeper kafka-broker
          
          echo "⏳ Aguardando infraestrutura..."
          sleep 30

      - name: "[5] Verificar Infraestrutura"
        run: |
          echo "🔍 Verificando infraestrutura..."
          cd infra
          docker compose ps
          
          # Verificar se serviços de infra estão rodando
          if docker compose ps postgres | grep -q "Up"; then
            echo "✅ PostgreSQL está rodando"
          else
            echo "❌ PostgreSQL não está rodando"
            docker compose logs postgres
            exit 1
          fi
          
          if docker compose ps kafka-broker | grep -q "Up"; then
            echo "✅ Kafka está rodando"
          else
            echo "❌ Kafka não está rodando"
            docker compose logs kafka-broker
            docker compose logs zookeeper
            exit 1
          fi

      - name: "[6] Iniciar e Testar Conta Service"
        run: |
          echo "🚀 Iniciando Conta Service..."
          cd infra
          
          # Iniciar apenas conta-service primeiro
          docker compose up -d conta-service
          
          echo "⏳ Aguardando Conta Service iniciar..."
          sleep 30
          
          # Verificar se o serviço está rodando
          if docker compose ps conta-service | grep -q "Up"; then
            echo "✅ Conta Service está rodando"
          else
            echo "❌ Conta Service não está rodando"
            docker compose logs conta-service
            exit 1
          fi
          
          # Testar health check
          echo "🏥 Testando Conta Service..."
          if curl -s -f http://localhost:8081/actuator/health; then
            echo "✅✅ CONTA SERVICE: HEALTH CHECK PASSOU"
          else
            echo "❌❌ CONTA SERVICE: HEALTH CHECK FALHOU"
            docker compose logs conta-service --tail=50
            exit 1
          fi

      - name: "[7] Iniciar e Testar Kafka Service"
        run: |
          echo "🚀 Iniciando Kafka Service..."
          cd infra
          
          # Iniciar kafka-service
          docker compose up -d kafka-service
          
          echo "⏳ Aguardando Kafka Service iniciar..."
          sleep 30
          
          # Verificar se o serviço está rodando
          if docker compose ps kafka-service | grep -q "Up"; then
            echo "✅ Kafka Service está rodando"
          else
            echo "❌ Kafka Service não está rodando"
            docker compose logs kafka-service
            exit 1
          fi
          
          # Testar health check com múltiplas tentativas
          echo "🏥 Testando Kafka Service..."
          for i in {1..5}; do
            if curl -s -f http://localhost:8082/actuator/health; then
              echo "✅✅ KAFKA SERVICE: HEALTH CHECK PASSOU"
              break
            else
              echo "⏳ Tentativa $i: Kafka Service não responde, aguardando..."
              sleep 10
            fi
          done
          
          # Teste final
          if curl -s -f http://localhost:8082/actuator/health; then
            echo "🎉 KAFKA SERVICE: SAUDÁVEL"
          else
            echo "💥 KAFKA SERVICE: HEALTH CHECK FALHOU"
            docker compose logs kafka-service --tail=50
            exit 1
          fi

      - name: "[8] Teste Final de Integração"
        run: |
          echo "🎯 Teste final de integração..."
          cd infra
          
          echo "📊 Status final:"
          docker compose ps
          
          echo "✅✅ INTEGRAÇÃO DOCKER: SUCESSO!"

      - name: "[9] Limpar Ambiente"
        if: always()
        run: |
          cd infra
          docker compose down -v
          echo "🧹 Ambiente limpo"

  security-scan:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: "[1] Checkout"
        uses: actions/checkout@v4

      - name: "[2] Security Scan"
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'api-funcoes-teste-spring'
          path: '.'
          format: 'HTML'
          args: >
            --failOnCVSS 7
            --scan conta-service/
            --scan kafka-service/

      - name: "[3] Upload Report"
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: reports/
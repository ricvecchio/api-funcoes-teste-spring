name: üöÄ CI/CD - Build & Deploy VPS (Simulado)

on:
  push:
    branches:
      - develop
  workflow_dispatch:
    inputs:
      environment:
        description: "Destino (develop/manual main)"
        required: true
        default: "production"

env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1
  IMAGE_CACHE_DIR: /tmp/.buildx-cache
  CONTA_SERVICE_PATH: ./../conta-service
  KAFKA_SERVICE_PATH: ./../kafka-service
  INFRA_PATH: ./infra
  ENV_FILE_DEV: ${{ github.workspace }}/infra/.env
  ENV_FILE_PROD: ${{ github.workspace }}/infra/.env.prod

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üì¶ Checkout
        uses: actions/checkout@v4

      - name: ‚òï Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven

      - name: üß± Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üíæ Cache Buildx
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: üî® Build Java Services
        run: |
          cd $CONTA_SERVICE_PATH && mvn -B clean package -DskipTests
          cd $KAFKA_SERVICE_PATH && mvn -B clean package -DskipTests

      - name: üê≥ Build Docker Images
        run: |
          if [ "${{ github.ref }}" == "refs/heads/develop" ]; then
            docker compose --env-file $ENV_FILE_DEV -f $INFRA_PATH/docker-compose.yml build --progress=plain
          else
            docker compose --env-file $ENV_FILE_PROD -f $INFRA_PATH/docker-compose.yml build --progress=plain
          fi

      - name: üßπ Deploy Simulation
        run: |
          if [ "${{ github.ref }}" == "refs/heads/develop" ]; then
            echo "üöÄ Deploy autom√°tico simulado para DEVELOP"
          else
            echo "‚è∏Ô∏è Deploy manual para MAIN (aguardando aprova√ß√£o)"

name: CI/CD - Microservices Infra

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      CONTA_SERVICE_PATH: conta-service
      KAFKA_SERVICE_PATH: kafka-service
      CONTA_SERVICE_PORT: 8081
      KAFKA_SERVICE_PORT: 8082

    steps:
      - name: üì• Checkout do reposit√≥rio
        uses: actions/checkout@v4

      - name: ‚òï Configurar JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven

      - name: üß± Build dos servi√ßos
        run: |
          echo "üì¶ Build conta-service"
          mvn -f ${{ env.CONTA_SERVICE_PATH }}/pom.xml clean package -DskipTests -q
          echo "üì¶ Build kafka-service"
          mvn -f ${{ env.KAFKA_SERVICE_PATH }}/pom.xml clean package -DskipTests -q

      - name: üß© Instalar depend√™ncias auxiliares
        run: sudo apt-get update && sudo apt-get install -y curl netcat-openbsd

      - name: üê≥ Build das imagens Docker
        run: |
          docker build -t conta-service:latest -f conta-service/Dockerfile conta-service
          docker build -t kafka-service:latest -f kafka-service/Dockerfile kafka-service
        env:
          CONTA_SERVICE_PATH: ./conta-service
          KAFKA_SERVICE_PATH: ./kafka-service

      - name: üöÄ Subir ambiente Docker Compose
        run: |
          cd infra
          docker compose --env-file .env up -d --build

      - name: üïì Aguardar containers ficarem saud√°veis
        run: |
          echo "‚è≥ Aguardando containers ficarem saud√°veis..."
          timeout 900 bash -c '
            until [ "$(docker inspect -f {{.State.Health.Status}} conta-service)" == "healthy" ]; do
              echo "‚è≥ Aguardando conta-service..."; sleep 15;
            done
            echo "‚úÖ conta-service saud√°vel!"

            until [ "$(docker inspect -f {{.State.Health.Status}} kafka-service)" == "healthy" ]; do
              echo "‚è≥ Aguardando kafka-service..."; sleep 15;
            done
            echo "‚úÖ kafka-service saud√°vel!"
          '
          docker compose -f infra/docker-compose.yml ps

      - name: üîç Testar endpoints
        run: |
          echo "‚úÖ Verificando conta-service"
          curl -f http://localhost:${CONTA_SERVICE_PORT}/actuator/health
          echo "‚úÖ Verificando kafka-service"
          curl -f http://localhost:${KAFKA_SERVICE_PORT}/actuator/health

      - name: üß™ Executar testes Maven
        run: |
          mvn -f ${{ env.CONTA_SERVICE_PATH }}/pom.xml test -q
          mvn -f ${{ env.KAFKA_SERVICE_PATH }}/pom.xml test -q

      - name: üìÑ Logs em caso de falha
        if: failure()
        run: |
          echo "‚ö†Ô∏è Logs dos containers:"
          docker logs conta-service || true
          docker logs kafka-service || true
          docker logs postgres-db || true
          docker logs kafka-broker || true
          docker logs zookeeper || true

      - name: üßπ Limpeza final
        if: always()
        run: |
          cd infra
          docker compose down -v --remove-orphans
          docker system prune -af

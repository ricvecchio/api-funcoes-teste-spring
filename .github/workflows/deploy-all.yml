name: CI/CD - Microservices Infra

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    # =========================
    # Vari√°veis de ambiente globais do job
    # =========================
    env:
      CONTA_SERVICE_PATH: ../conta-service
      KAFKA_SERVICE_PATH: ../kafka-service
      CONTA_SERVICE_PORT: 8081
      KAFKA_SERVICE_PORT: 8082

    steps:
      # ======================================
      # Checkout do reposit√≥rio
      # ======================================
      - name: üì• Checkout do reposit√≥rio
        uses: actions/checkout@v4

      # ======================================
      # Configurar JDK 21 com cache Maven
      # ======================================
      - name: ‚òï Configurar JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven

      # ======================================
      # Build dos servi√ßos Maven (skip tests)
      # ======================================
      - name: üß± Build dos servi√ßos
        run: |
          cd $CONTA_SERVICE_PATH && mvn clean package -DskipTests -q
          cd $KAFKA_SERVICE_PATH && mvn clean package -DskipTests -q

      # ======================================
      # Instalar ferramentas auxiliares
      # ======================================
      - name: üß© Instalar depend√™ncias auxiliares
        run: sudo apt-get update && sudo apt-get install -y curl netcat-openbsd

      # ======================================
      # Build das imagens Docker
      # ======================================
      - name: üê≥ Build das imagens Docker
        run: |
          docker build -t conta-service:latest -f $CONTA_SERVICE_PATH/Dockerfile $CONTA_SERVICE_PATH
          docker build -t kafka-service:latest -f $KAFKA_SERVICE_PATH/Dockerfile $KAFKA_SERVICE_PATH

      # ======================================
      # Subir ambiente completo com Docker Compose
      # ======================================
      - name: üöÄ Subir ambiente Docker Compose
        run: |
          cd infra
          docker compose --env-file .env up -d --build

      # ======================================
      # Aguardar containers ficarem saud√°veis
      # ======================================
      - name: üïì Aguardar containers ficarem saud√°veis
        run: |
          echo "‚è≥ Aguardando containers ficarem saud√°veis..."

          # Conta-service
          attempts=0
          max_attempts=40
          until [ "$(docker inspect -f {{.State.Health.Status}} conta-service)" == "healthy" ] || [ $attempts -ge $max_attempts ]; do
            attempts=$((attempts+1))
            echo "‚è≥ conta-service ainda n√£o saud√°vel ($attempts/$max_attempts)"
            sleep 15
          done
          if [ "$(docker inspect -f {{.State.Health.Status}} conta-service)" != "healthy" ]; then
            echo "‚ùå conta-service n√£o ficou saud√°vel!"
            docker logs conta-service
            exit 1
          fi
          echo "‚úÖ conta-service saud√°vel!"

          # Kafka-service
          attempts=0
          max_attempts=60
          until [ "$(docker inspect -f {{.State.Health.Status}} kafka-service)" == "healthy" ] || [ $attempts -ge $max_attempts ]; do
            attempts=$((attempts+1))
            echo "‚è≥ kafka-service ainda n√£o saud√°vel ($attempts/$max_attempts)"
            sleep 15
          done
          if [ "$(docker inspect -f {{.State.Health.Status}} kafka-service)" != "healthy" ]; then
            echo "‚ùå kafka-service n√£o ficou saud√°vel!"
            docker logs kafka-service
            exit 1
          fi
          echo "‚úÖ kafka-service saud√°vel!"

          docker compose -f infra/docker-compose.yml ps

      # ======================================
      # Testar endpoints dos servi√ßos
      # ======================================
      - name: üîç Testar endpoints
        run: |
          echo "‚úÖ Verificando conta-service"
          curl -f http://localhost:$CONTA_SERVICE_PORT/actuator/health
          echo "‚úÖ Verificando kafka-service"
          curl -f http://localhost:$KAFKA_SERVICE_PORT/actuator/health

      # ======================================
      # Executar testes autom√°ticos Maven
      # ======================================
      - name: üß™ Executar testes Maven
        run: |
          cd $CONTA_SERVICE_PATH && mvn test -q
          cd $KAFKA_SERVICE_PATH && mvn test -q

      # ======================================
      # Logs detalhados em caso de falha
      # ======================================
      - name: üìÑ Logs em caso de falha
        if: failure()
        run: |
          echo "‚ö†Ô∏è Logs dos containers:"
          docker logs conta-service || true
          docker logs kafka-service || true
          docker logs postgres-db || true
          docker logs kafka-broker || true
          docker logs zookeeper || true

      # ======================================
      # Limpeza final do Docker
      # ======================================
      - name: üßπ Limpeza final
        if: always()
        run: |
          cd infra
          docker compose down -v --remove-orphans
          docker system prune -af

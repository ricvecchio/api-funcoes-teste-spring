name: üß± CI - Integra√ß√£o Completa

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # ------------------------------------------------------------
      # üß© Checkout do c√≥digo fonte
      # ------------------------------------------------------------
      - name: üì¶ Checkout do reposit√≥rio
        uses: actions/checkout@v4

      # ------------------------------------------------------------
      # ‚öôÔ∏è Configura√ß√£o do ambiente Docker Compose
      # ------------------------------------------------------------
      - name: üê≥ Configurar Docker Compose e Infra CI
        run: |
          set -euo pipefail
          echo "üöÄ Iniciando infra CI: postgres + zookeeper..."
          docker compose -f api-funcoes-teste-spring/infra/docker-compose.yml up -d postgres zookeeper

          echo "‚è≥ Aguardando Zookeeper (at√© 120s)..."
          max_attempts=24
          attempt=1
          until docker exec zookeeper bash -c "echo ruok | nc -w 1 127.0.0.1 2181 | grep imok" >/dev/null 2>&1; do
            if [ $attempt -ge $max_attempts ]; then
              echo "‚ùå Zookeeper n√£o ficou pronto ap√≥s $((max_attempts*5))s"
              docker compose -f api-funcoes-teste-spring/infra/docker-compose.yml logs zookeeper --tail=200
              docker compose -f api-funcoes-teste-spring/infra/docker-compose.yml down -v --remove-orphans
              exit 1
            fi
            echo "‚è≥ Zookeeper n√£o est√° pronto... tentativa $attempt/$max_attempts"
            attempt=$((attempt+1))
            sleep 5
          done
          echo "‚úÖ Zookeeper pronto!"

          echo "üöÄ Subindo Kafka broker..."
          docker compose -f api-funcoes-teste-spring/infra/docker-compose.yml up -d kafka-broker

          echo "‚è≥ Aguardando Kafka Broker (at√© 90s)..."
          max_attempts=18
          attempt=1
          until docker exec kafka-broker bash -c "kafka-broker-api-versions --bootstrap-server localhost:9092 >/dev/null 2>&1"; do
            if [ $attempt -ge $max_attempts ]; then
              echo "‚ùå Kafka Broker n√£o pronto ap√≥s $((max_attempts*5))s"
              docker compose -f api-funcoes-teste-spring/infra/docker-compose.yml logs kafka-broker --tail=200
              docker compose -f api-funcoes-teste-spring/infra/docker-compose.yml down -v --remove-orphans
              exit 1
            fi
            echo "‚è≥ Kafka Broker n√£o est√° pronto... tentativa $attempt/$max_attempts"
            attempt=$((attempt+1))
            sleep 5
          done
          echo "‚úÖ Kafka Broker pronto!"

          echo "üöÄ Subindo servi√ßos de aplica√ß√£o..."
          docker compose -f api-funcoes-teste-spring/infra/docker-compose.yml up -d conta-service kafka-service

          echo "‚è≥ Healthchecks dos servi√ßos (at√© 2 min)..."
          for svc in conta-service kafka-service; do
            max_try=24
            try=1
            port=8081
            if [ "$svc" = "kafka-service" ]; then port=8082; fi
            while ! curl -s -f "http://localhost:${port}/actuator/health" >/dev/null 2>&1; do
              if [ $try -ge $max_try ]; then
                echo "‚ùå $svc healthcheck failed"
                docker compose -f api-funcoes-teste-spring/infra/docker-compose.yml logs $svc --tail=200
                docker compose -f api-funcoes-teste-spring/infra/docker-compose.yml down -v --remove-orphans
                exit 1
              fi
              echo "‚è≥ $svc n√£o est√° pronto... tentativa $try/$max_try"
              try=$((try+1))
              sleep 5
            done
            echo "‚úÖ $svc ok"
          done

          echo "üéâ Integra√ß√£o OK - limpando ambientes..."
          docker compose -f api-funcoes-teste-spring/infra/docker-compose.yml down -v --remove-orphans
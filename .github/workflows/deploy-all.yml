# ============================================================
# üß± DOCKER COMPOSE PARA PIPELINE DE CI
# Infra m√≠nima: Postgres + Zookeeper + Kafka + Servi√ßos
# ============================================================

version: '3.8'

services:
  # ----------------------------------------------------------
  # üêò POSTGRES
  # Banco de dados usado nos testes de integra√ß√£o.
  # ----------------------------------------------------------
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: conta_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    networks:
      - microservices-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d conta_db"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  # ----------------------------------------------------------
  # ü¶ì ZOOKEEPER
  # Usado pelo Kafka como service discovery e coordena√ß√£o.
  # A tag '3.7.1' √© est√°vel e compat√≠vel com Kafka 3.x.
  # ----------------------------------------------------------
  zookeeper:
    image: bitnami/zookeeper:3.7.1
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    networks:
      - microservices-net
    healthcheck:
      test: ["CMD-SHELL", "echo ruok | nc -w 1 127.0.0.1 2181 | grep imok || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s

  # ----------------------------------------------------------
  # ü¶ú KAFKA BROKER
  # Broker principal usado pelos microservi√ßos para mensageria.
  # A vers√£o 3.9.0 √© est√°vel e compat√≠vel com Zookeeper 3.7.x.
  # ----------------------------------------------------------
  kafka-broker:
    image: bitnami/kafka:3.9.0
    container_name: kafka-broker
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka-broker:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - "9092:9092"
    networks:
      - microservices-net
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD-SHELL", "kafka-broker-api-versions --bootstrap-server localhost:9092 >/dev/null 2>&1 || exit 1"]
      interval: 8s
      timeout: 5s
      retries: 6
      start_period: 20s

  # ----------------------------------------------------------
  # üíº CONTA-SERVICE
  # Servi√ßo principal da aplica√ß√£o, que acessa Postgres e Kafka.
  # ----------------------------------------------------------
  conta-service:
    image: conta-service:latest
    container_name: conta-service
    ports:
      - "8081:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/conta_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka-broker:9092
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    networks:
      - microservices-net
    depends_on:
      - postgres
      - kafka-broker
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10

  # ----------------------------------------------------------
  # üì¶ KAFKA-SERVICE
  # Servi√ßo secund√°rio que tamb√©m se comunica com Kafka e Postgres.
  # ----------------------------------------------------------
  kafka-service:
    image: kafka-service:latest
    container_name: kafka-service
    ports:
      - "8082:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/conta_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka-broker:9092
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    networks:
      - microservices-net
    depends_on:
      - postgres
      - kafka-broker
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10

# ------------------------------------------------------------
# üåê REDE COMPARTILHADA
# Todos os containers se comunicam nesta bridge.
# ------------------------------------------------------------
networks:
  microservices-net:
    driver: bridge

name: CI/CD - Microservices Infra

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # ======================================
      # 📥 Checkout do repositório
      # ======================================
      - name: 📥 Checkout do repositório
        uses: actions/checkout@v4

      # ======================================
      # ☕ Configurar JDK 21 com cache Maven
      # ======================================
      - name: ☕ Configurar JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven

      # ======================================
      # 🧱 Build dos serviços Maven (skip tests)
      # ======================================
      - name: 🧱 Build dos serviços
        run: |
          cd conta-service && mvn clean package -DskipTests -q
          cd ../kafka-service && mvn clean package -DskipTests -q

      # ======================================
      # 🧩 Instalar dependências auxiliares
      # ======================================
      - name: 🧩 Instalar dependências auxiliares
        run: sudo apt-get update && sudo apt-get install -y curl netcat-openbsd

      # ======================================
      # 🐳 Build das imagens Docker
      # ======================================
      - name: 🐳 Build das imagens Docker
        run: |
          docker build -t conta-service:latest -f conta-service/Dockerfile conta-service
          docker build -t kafka-service:latest -f kafka-service/Dockerfile kafka-service

      # ======================================
      # 🚀 Subir ambiente completo com Docker Compose
      # ======================================
      - name: 🚀 Subir ambiente Docker Compose
        run: |
          cd infra
          docker compose --env-file .env up -d --build

      # ======================================
      # 🕓 Aguardar containers ficarem saudáveis
      # ======================================
      - name: 🕓 Aguardar containers ficarem saudáveis
        run: |
          echo "⏳ Aguardando containers ficarem saudáveis..."
          for service in conta-service kafka-service; do
            echo "⏳ Aguardando $service..."
            attempts=0
            max_attempts=60   # até 15 minutos (60 * 15s)
            until [ "$(docker inspect -f {{.State.Health.Status}} $service)" == "healthy" ] || [ $attempts -ge $max_attempts ]; do
              attempts=$((attempts+1))
              echo "⏳ $service não está saudável ainda... Tentativa $attempts/$max_attempts"
              sleep 15
            done
            if [ "$(docker inspect -f {{.State.Health.Status}} $service)" != "healthy" ]; then
              echo "❌ $service não ficou saudável após $max_attempts tentativas!"
              docker logs $service
              exit 1
            fi
            echo "✅ $service saudável!"
          done
          docker compose -f infra/docker-compose.yml ps

      # ======================================
      # 🔍 Testar endpoints dos serviços
      # ======================================
      - name: 🔍 Testar endpoints
        run: |
          echo "✅ Verificando conta-service"
          curl -f http://localhost:${CONTA_SERVICE_PORT}/actuator/health
          echo "✅ Verificando kafka-service"
          curl -f http://localhost:${KAFKA_SERVICE_PORT}/actuator/health

      # ======================================
      # 🧪 Executar testes automáticos Maven
      # ======================================
      - name: 🧪 Executar testes Maven
        run: |
          cd conta-service && mvn test -q
          cd ../kafka-service && mvn test -q

      # ======================================
      # 📄 Logs detalhados em caso de falha
      # ======================================
      - name: 📄 Logs em caso de falha
        if: failure()
        run: |
          echo "⚠️ Logs dos containers:"
          docker logs conta-service || true
          docker logs kafka-service || true
          docker logs postgres-db || true
          docker logs kafka-broker || true
          docker logs zookeeper || true

      # ======================================
      # 🧹 Limpeza final do Docker
      # ======================================
      - name: 🧹 Limpeza final
        if: always()
        run: |
          cd infra
          docker compose down -v --remove-orphans
          docker system prune -af

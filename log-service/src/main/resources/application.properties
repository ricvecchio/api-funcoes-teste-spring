# =========================
# Servidor
# =========================
server.port=${LOG_SERVICE_PORT:8083}
spring.application.name=log-service
spring.profiles.active=${SPRING_PROFILES_ACTIVE:local}

# =========================
# Banco
# =========================
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://postgres-db:5432/contas_db}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:postgres}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=false

# =========================
# Kafka
# =========================
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:kafka-broker:9092}
conta.aberturas.topic=${KAFKA_TOPIC_CONTAS_ABRIR:conta-aberturas}

# =========================
# Log Service
# =========================
log.service.url=${LOG_SERVICE_URL:http://log-service:8083/api/logs}

# =========================
# Splunk (opcional)
# =========================
splunk.hec.url=${SPLUNK_HEC_URL:}
splunk.hec.token=${SPLUNK_HEC_TOKEN:}

# =========================
# Datadog / Micrometer
# =========================
# ? Ativado para exportar métricas e traços para o agente local
management.metrics.export.datadog.enabled=true
management.metrics.export.datadog.api-key=${DATADOG_API_KEY:}
management.metrics.export.datadog.step=30s
management.metrics.export.datadog.connect-timeout=3s
management.metrics.export.datadog.read-timeout=3s
management.metrics.export.datadog.uri=http://datadog-agent:8126


# =========================
# CORS (frontend Angular)
# =========================
app.cors.allowed-origins=${APP_CORS_ALLOWED_ORIGINS:http://localhost:4200}

# =========================
# Logging local
# =========================
logging.level.com.funcoes=INFO

# =========================
# Auto limpeza
# =========================
log.retention.minutes=${LOG_RETENTION_MINUTES:60}
log.max.entries=${LOG_MAX_ENTRIES:5000}
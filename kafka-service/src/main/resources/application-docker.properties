# Docker Profile - Kafka Service
spring.application.name=kafka-service
server.port=8080
server.servlet.context-path=/api

# Database Docker
spring.datasource.url=jdbc:postgresql://postgres:5432/conta_db
spring.datasource.username=postgres
spring.datasource.password=password
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Kafka Consumer Docker
spring.kafka.bootstrap-servers=kafka-broker:9092
spring.kafka.consumer.group-id=kafka-service-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.session.timeout.ms=30000
spring.kafka.consumer.properties.heartbeat.interval.ms=10000
spring.kafka.listener.ack-mode=manual
spring.kafka.listener.missing-topics-fatal=false

# Actuator
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always
management.health.probes.enabled=true

# Hikari Connection Pool
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2

# Logging
logging.level.com.funcoes=INFO
logging.level.org.springframework.kafka=INFO
logging.level.org.hibernate=WARN